@import "compass";
@import "dimension";
@import "grid";

$baseline: 16px;
$em-baseline: 13px;

$small-columns:4;
$medium-columns:8;
$large-columns:12;
$xlarge-columns:16;

$grid-padding: 1rem;

$total-columns: $small-columns; //Mobile first

@include grid-semantics($total-columns); 


* {
	@include box-sizing(border-box);
}

html {text-align:center; font-size: $baseline; min-width:320px;}

body {
	@include rem(padding 0 1rem);
	font-size: em(13px, 1rem);
	
	font-family:sans-serif;
	&:before {
		content:("Grid width: "+grid-width());
	}
}


.col {
	border: 1px dotted #eee; 
	padding: rem(.75em);
	
	&:nth-of-type(2n) {background:#eee;};
}

#container {
	//include flux-container($small-columns, $medium-columns);
	text-align:left;
}

//.small-hidden {display:none}


$grid-breakpoints: grid-breakpoints(
	("small" $small-columns), 
	("small-only" $small-columns $medium-columns),
	//("small-down" 1 $medium-columns),
	
	("medium" $medium-columns), 
	//("medium-only" $medium-columns $large-columns),
	//("medium-down" 1 $large-columns),
	
	("large" $large-columns), 
	//("large-only" $large-columns $xlarge-columns),
	//("large-down" 1 $large-columns),
	
	("xlarge" $xlarge-columns)
	//("xlarge-only" $large-columns $xlarge-columns),
	//("xlarge-down" 1 $xlarge-columns)
);

@each $breakpoint in $grid-breakpoints {

	@include grid-breakpoint($breakpoint){
		$handle: grid-breakpoint-handle($breakpoint);
		$limit-columns: grid-breakpoint-limit($breakpoint);
		
		body {
			min-width: grid-width($total-columns); 
			@if($limit-columns != null){
				max-width: grid-width($limit-columns); //Set max-width to the next breakpoint
			}
			
			&:before {
				content:($total-columns + " columns (min "+grid-width($total-columns)+")");
			}
		}
		
		// Include semantics classes for testing
		//---------------------------------------------------------------------------------
		@include grid-semantics($total-columns, $prefix: $handle);
		
		// Setup our main containers.
		//---------------------------------------------------------------------------------
		#container {
			@include flux-container($total-columns, $limit-columns);
			//@include container($total-columns);
		}
		
		// Add some helper classes for this breakpoint
		//---------------------------------------------------------------------------------
		#{"."+ $handle +"-hidden"} {
			display:none;
		}
	}
		
}



@include grid-breakpoint("small-only"){
	body {color:red;}
}

@include grid-breakpoint("xlarge"){
	body {max-width:grid-width();}
}
/*
@include grid-breakpoint("medium-down"){
	body {color:green;}
}


//
// SMALL-DOWN
//================================================================================
@include grid-breakpoint(0, $small-columns){
	
	@include grid-semantics($small-columns, $prefix:"small");	
	
}


//
// MEDIUM
//================================================================================
@include grid-breakpoint($medium-columns){
	body {
		max-width: grid-width($large-columns); //Set max-width to the next breakpoint
		&:before {
			content:("Grid width: "+grid-width($medium-columns));
		}
	}
	@include grid-semantics($medium-columns, $prefix:"medium");
	
	#container {
		@include flux-container($medium-columns, $large-columns);
	}
	
	.medium-hidden {
		display:none;
	}
}


//
// LARGE
//================================================================================

@include grid-breakpoint($large-columns){
	body {
		max-width: none;
		&:before {
			content:("Grid width: "+grid-width($large-columns));
		}
	}
	@include grid-semantics($large-columns, $prefix:"large");
	#container {
		@include flux-container($large-columns, $xlarge-columns);
	}
	
	.large-hidden {
		display:none;
	}
}


//
// XLARGE
//================================================================================

@include grid-breakpoint($xlarge-columns){
	body {
		max-width: none;
		&:before {
			content:("Grid width: "+grid-width($xlarge-columns));
		}
	}
	@include grid-semantics($xlarge-columns, $prefix:"xlarge");
	#container {
		@include flux-container($xlarge-columns, $xlarge-columns);
	}
	
	.xlarge-hidden {
		display:none;
	}
}

*/