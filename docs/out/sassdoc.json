{"units":{"unity":{"param":[{"description":"...","name":"$dims"},"= unity(12px, 1em) = #{unity(12px, 1em)}","= unity(1em, 14px, 1.2rem, (16, 8%)) = 1em .25em 1.45em 16em 8%"],"overview":["Convert all numbers to the same unit type. Percentages are ignored. Convert them first with percent(), if necessary."],"linenum":299,"source":"unity/_units.scss","mixin":["unity"],"category":"units"},"rem":{"param":[{"description":"...","name":"$properties"},"=rem(font-size 12px, line-height 1.4em)"],"overview":["Use rem units with px fallback","Specify a px, em, or rem value with each property. Unitless values will be considered an rem."],"linenum":356,"source":"unity/_units.scss","mixin":["rem"],"category":"units"},"sub-px":{"param":[{"description":"","name":"$dim"}],"overview":["If a number has a .00001 decimal, it's probably a rounding issue and needs to be dropped."],"linenum":13,"source":"unity/_units.scss","function":["sub-px"],"category":"units"},"strip-unit":{"param":[{"type":"Number","description":"","name":"$num"},"=strip-unit(16px) = 16"],"overview":["Removes the unit from a number."],"linenum":25,"source":"unity/_units.scss","function":["strip-unit"],"category":"units"},"pt":{"param":[{"description":"","name":"$dim"},{"description":"Defaults to global $px-per-inch (96).","name":"$px-per-inch"},{"description":"Defaults to global $pt-per-inch (72).","name":"$pt-per-inch"}],"overview":["Visually relative to the pixels per inch of a device, but provides a consistent mathmatical formula for converting units to pts for print.","Totally untested with actual print at this point."],"linenum":240,"source":"unity/_units.scss","function":["pt"],"return":[{"type":"Number","description":"A pt value."},"=pt(16px) = 12pt"],"category":"units"},"em":{"param":[{"type":"Number","description":"","name":"$dim"},{"type":"Number","description":"[global $em-baseline] However many px = 1em, or the relative em of the current context.","name":"$baseline"},{"type":"Boolean","description":"[false] When true, adjusts the global $em-baseline to whatever the result is. this is useful if you want to set things font-size: em(12px)","name":"$adjust"}],"overview":["Sometimes em values are still viable, obviously, but you have to know the context for calculations. The baseline is stored, so each subsequent call will use the previous $baseline parameter, if none is passed."],"linenum":155,"source":"unity/_units.scss","function":["em"],"category":"units"},"px":{"param":[{"description":"","name":"$dim"}],"overview":["Convert any number to a px, or ensure a px value.","Percentages are retained. Use percent() to calculate static values."],"linenum":63,"source":"unity/_units.scss","function":["px"],"return":[{"type":"Number","description":"A px value."},"=px(1rem) = 16px","=px(1 4rem 2em 10%) = 1px 64px 26px 10%"],"category":"units"},"first-unit":{"param":[{"description":"...","name":"$dims"},"=first-unit(0 12% 10% 1px) = px"],"overview":["Find the first unit in a list of numbers."],"linenum":34,"source":"unity/_units.scss","function":["first-unit"],"category":"units"},"percent":{"param":[{"type":"Number","description":"If a %","name":"$dim"},{"type":"Number","description":"The total width for the calculation of the percentages.","name":"$context"}],"overview":["Convert arbitrary units to or from percentages. This works a little differently than the other unit functions, because it does not retain units of its own type. In other words, a % value will be converted, rather than returned entact."],"linenum":201,"source":"unity/_units.scss","function":["percent"],"return":[{"type":"Number","description":"If $dim is a % value, returns the percent calculation in the same unit as $context. If $dim is another unit, a % will be returned."},"=percent(24px, 240px) = 10%","=percent(1.5rem, 240px) = 10%","=percent(10%, 240px) = 24px","=percent(10%, rem(240px)) = 1.5rem"],"category":"units"},"plus":{"param":[{"description":"...","name":"$dims"},"= plus(1rem, 4px, 7em, 5)"],"overview":["Add numbers, normalizing them first. Percentages are ignored. Convert them first with percent(), if necessary."],"linenum":323,"source":"unity/_units.scss","mixin":["plus"],"category":"units"},"minus":{"param":[{"description":"...","name":"$dims"},"= minus(20rem, 4px, 7em, 5)"],"overview":["Subtract numbers, normalizing them first. Percentages are ignored. Convert them first with percent(), if necessary."],"linenum":339,"source":"unity/_units.scss","mixin":["minus"],"category":"units"},"cast-unit":{"param":[{"type":"String","description":"[em,pt,px,rem]","name":"$unit"},{"description":"","name":"$dims"},"= cast-unit(px, 3em, 4em, (5))"],"linenum":279,"source":"unity/_units.scss","function":["cast-unit"],"category":"units"}},"unity/grid/breakpoints":{"grid-breakpoints":{"linenum":5,"source":"unity/grid/_breakpoints.scss","function":["grid-breakpoints"],"category":"unity/grid/breakpoints"},"grid-breakpoint":{"param":[{"type":"String|List","description":"If a string, looks for a breakpoint in $grid-breakpoints with the same handle. If a list, it's considered a breakpoint.","name":"$breakpoint"},{"type":"Selector","description":"['all'] Base media query for this breakpoint.","name":"$media-query"},{"type":"Boolean|String","description":"[false] Output grid semantics for this breakpoint. A string will be used as the semantics prefix.","name":"$semantics"},{"type":"String","description":"[null] The root selector to create the rules under.","name":"$scope"},{"type":"Boolean","description":"[false] A temporary workaround for using parent selector at the base level. If your @include grid-breakpoint() call is at the base/root level (i.e. has not parent selectors), pass true.","name":"$base-level"}],"overview":["Add rules to a breakpoint. Changes to the global grid variables effective only in this context.","If a breakpoint's columns apply to the number of columns specified by $grid-legacy, the content of the mixin will be duplicated in the \".legacy\" scope."],"linenum":115,"source":"unity/grid/_breakpoints.scss","mixin":["grid-breakpoint"],"category":"unity/grid/breakpoints"},"grid-breakpoint-columns":{"param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"overview":["Returns the columns for a breakpoint."],"linenum":44,"source":"unity/grid/_breakpoints.scss","function":["grid-breakpoint-columns"],"category":"unity/grid/breakpoints"},"grid-breakpoint-max":{"param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"overview":["Returns the maximum columns that a breakpoint is visible at."],"linenum":82,"source":"unity/grid/_breakpoints.scss","function":["grid-breakpoint-max"],"category":"unity/grid/breakpoints"},"grid-breakpoint-handle":{"param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"linenum":33,"source":"unity/grid/_breakpoints.scss","function":["grid-breakpoint-handle"],"category":"unity/grid/breakpoints"},"grid-breakpoint-min":{"param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"overview":["Returns the minimum columns that a breakpoint is visible at."],"linenum":60,"source":"unity/grid/_breakpoints.scss","function":["grid-breakpoint-min"],"category":"unity/grid/breakpoints"},"grid-breakpoint-scope":{"param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"overview":["Returns the base selector scope for the breakpoint."],"linenum":101,"source":"unity/grid/_breakpoints.scss","function":["grid-breakpoint-scope"],"return":[{"type":"Selector","description":"The selector scope for a certain breakpoint."}],"category":"unity/grid/breakpoints"}},"unity/grid/base":{"static-column()":{"param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean","description":"","name":"$semantics"}],"overview":["Creates a static column"],"linenum":328,"source":"unity/grid/_base.scss","mixin":["static-column()"],"category":"unity/grid/base"},"static-gutters":{"overview":["Convenience function for calculating static gutters."],"linenum":189,"source":"unity/grid/_base.scss","function":["static-gutters"],"category":"unity/grid/base"},"gutters":{"param":[{"type":"Number","description":"","name":"$count"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"The totla number of columns. Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"Number","description":"The width of a single column in the grid. Defaults to global $grid-column-width.","name":"$column-width"},{"type":"Number","description":"The width of a single gutter in the grid. Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"type":"String","description":"The unit to use when calculating static dimensions. [px|em]","name":"$unit"}],"overview":["Get the width of a number of gutters."],"linenum":163,"source":"unity/grid/_base.scss","function":["gutters"],"category":"unity/grid/base"},"nth-omega":{"param":[{"description":"","name":"$nth"},{"type":"Boolean","description":"[true] When false, uses nth-child instead of nth-of-type.","name":"$of-type"},"=.column {"],"overview":["Convenience function for omegas."],"linenum":354,"source":"unity/grid/_base.scss","mixin":["nth-omega"],"include":["nth-omega(3n);","}"],"category":"unity/grid/base"},"fluid-container":{"param":[{"type":"Number","description":"Defaults to $grid-columns","name":"$span"},{"type":"Number","description":"Defaults to $column-width","name":"$column-width"},{"type":"Number","description":"Defaults to global $grid-gutter-width","name":"$gutter-width"},{"type":"Number","description":"Defaults to global $grid-padding","name":"$padding"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean|String","description":"","name":"$semantics"}],"overview":["Convenience method for fluid containers. Fluid containers are often easier with nesting."],"linenum":253,"source":"unity/grid/_base.scss","mixin":["fluid-container"],"category":"unity/grid/base"},"fluid-span":{"overview":["Convenience function for fluid span."],"linenum":207,"source":"unity/grid/_base.scss","function":["fluid-span"],"category":"unity/grid/base"},"static-columns":{"overview":["Convenience function for calculating static column width."],"linenum":156,"source":"unity/grid/_base.scss","function":["static-columns"],"category":"unity/grid/base"},"fluid-columns":{"overview":["Convenience function for calculating fluid columns."],"linenum":150,"source":"unity/grid/_base.scss","function":["fluid-columns"],"category":"unity/grid/base"},"grid-unit":{"param":[{"description":"","name":"$dim"}],"overview":["Convert any dimension to the unit preferred by the global $grid-unit."],"linenum":12,"source":"unity/grid/_base.scss","function":["grid-unit"],"category":"unity/grid/base"},"columns":{"param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"description":"[static|fluid] Defaults to global $grid-style.","name":"$style"},{"type":"Number","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"Adds &.omega, &.fluid, &.static, &.collapse classes for semantic markup. Pass a string to prefix the semantic classes.","name":"$semantics"}],"linenum":287,"source":"unity/grid/_base.scss","mixin":["columns"],"category":"unity/grid/base"},"column-width":{"param":[{"description":"","name":"$grid-width"},{"description":"","name":"$grid-columns"},{"description":"","name":"$gutter-width"},{"type":"String","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"description":"","name":"$grid-unit"},"=column-width(960px, 16, 10px)"],"overview":["Calculate the static width of a single column with a given grid-width and gutter-width."],"linenum":98,"source":"unity/grid/_base.scss","function":["column-width"],"category":"unity/grid/base"},"grid":{"param":[{"type":"Number","description":"Defaults to global $grid-columns.","name":"$columns"},{"type":"String","description":"[static|fluid] Defaults to global $grid-style.","name":"$style"},{"type":"Number","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"type":"Number","description":"Defaults to global $grid-padding.","name":"$padding"},{"type":"Number","description":"Defaults to global $grid-width, if column and gutter widths aren't set.","name":"$width"},{"type":"String","description":"Defaults to global $grid-unit.","name":"$unit"},{"type":"Number","description":"Defaults to global $grid-legacy.","name":"$legacy"},{"type":"Boolean|String","description":"If true, calls mixin grid-semantics() with the given grid parameters. A string is used as the $prefix parameter for grid-semantics().","name":"$semantics"}],"linenum":432,"source":"unity/grid/_base.scss","mixin":["grid"],"category":"unity/grid/base"},"row":{"overview":["Basic mixin for a row."],"linenum":281,"source":"unity/grid/_base.scss","mixin":["row"],"category":"unity/grid/base"},"gutter-width":{"param":[{"type":"Number","description":"Defaults to global $grid-width, if it exists.","name":"$grid-width"},{"type":"String","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"String","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"type":"String","description":"Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"type":"String","description":"Defaults to global $grid-unit.","name":"$unit"}],"overview":["Calculate the static width of a single gutter with a given grid-width and column-width."],"linenum":114,"source":"unity/grid/_base.scss","function":["gutter-width"],"category":"unity/grid/base"},"container-width":{"param":[{"type":"Number","description":"","name":"$columns"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number|List","description":"A padding value for the grid matte.","name":"$padding"},{"type":"Number","description":"The total width for the grid, if the column or gutter are null/auto.","name":"$width"},{"type":"String","description":"[rem|px]","name":"$unit"}],"overview":["Get the width of the grid container, which includes the padding (global $grid-padding)."],"linenum":82,"source":"unity/grid/_base.scss","function":["container-width"],"category":"unity/grid/base"},"fluid-column()":{"param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean","description":"","name":"$semantics"}],"overview":["Creates a fluid column"],"linenum":316,"source":"unity/grid/_base.scss","mixin":["fluid-column()"],"category":"unity/grid/base"},"container":{"param":[{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"Defaults to global $grid-padding.","name":"$padding"},{"type":"String","description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"Calls grid-semantics(), using parameters as $prefix, if it is a string.","name":"$semantics"}],"linenum":213,"source":"unity/grid/_base.scss","mixin":["container"],"category":"unity/grid/base"},"grid-padding-width":{"param":[{"description":"","name":"$padding"}],"linenum":72,"source":"unity/grid/_base.scss","function":["grid-padding-width"],"category":"unity/grid/base"},"span-limit":{"param":[{"description":"","name":"$min-columns"},{"description":"","name":"$max-columns"},{"description":"","name":"$column-width"},{"description":"","name":"$gutter-width"},{"type":"Number|List","description":"Offset the left and right dimensions with a list or number, ie. \"1rem 1.5rem\" or \"14px\";","name":"$adjust"},"=#container {"],"overview":["Add min-width and max-width for a column range."],"linenum":375,"source":"unity/grid/_base.scss","mixin":["span-limit"],"include":["span-limit\t(4, 12);","width:100%;","}"],"category":"unity/grid/base"},"grid-width":{"param":[{"type":"Number","description":"$grid-columns Defaults to global $grid-columns."}],"overview":["Calculate the static grid width for a number of columns.","Unlike column-width() and gutter-width(), the global $grid-width is overridden if we have values for both $column-width and $gutter-width, to ensure a calculated value."],"linenum":19,"source":"unity/grid/_base.scss","function":["grid-width"],"category":"unity/grid/base"},"span":{"param":[{"type":"Number","description":"","name":"$count"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"String","description":"Defaults to $grid-unit.","name":"$grid-unit"}],"linenum":196,"source":"unity/grid/_base.scss","function":["span"],"category":"unity/grid/base"},"grid-padding-left":{"param":[{"description":"","name":"$padding"}],"linenum":42,"source":"unity/grid/_base.scss","function":["grid-padding-left"],"category":"unity/grid/base"},"fluid-gutters":{"overview":["Convenience function for calculating fluid gutters."],"linenum":183,"source":"unity/grid/_base.scss","function":["fluid-gutters"],"category":"unity/grid/base"},"omega":{"overview":["Use for the last element of a row. Basically floats right and removes right margin."],"linenum":342,"source":"unity/grid/_base.scss","mixin":["omega","=.column {","&:nth-of-type(3n) {"],"include":["omega;","}","}"],"category":"unity/grid/base"},"flux-container":{"param":[{"type":"Number","description":"Defaults to 1.","name":"$min-span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$max-span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"Number","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"type":"String","description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"","name":"$semantics"}],"overview":["Create a container that spans a range of columns."],"linenum":265,"source":"unity/grid/_base.scss","mixin":["flux-container"],"category":"unity/grid/base"},"grid-padding-right":{"param":[{"description":"","name":"$padding"}],"linenum":59,"source":"unity/grid/_base.scss","function":["grid-padding-right"],"category":"unity/grid/base"}},"unity/grid/semantics":{"column-semantics":{"param":[{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[static|fluid]","name":"$style"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"String","description":"","name":"$unit"},{"type":"String","description":"","name":"$prefix"}],"overview":["Adds .fluid, .static, and .omega classes."],"linenum":68,"source":"unity/grid/_semantics.scss","mixin":["column-semantics"],"category":"unity/grid/semantics"},"grid-semantics":{"param":[{"type":"Number","description":"Defaults to global $grid-unit.","name":"$grid-unit"},{"type":"String","description":"A string to prefix the classes with (ie. \"small\", \"medium\", \"large\")","name":"$prefix"}],"linenum":2,"source":"unity/grid/_semantics.scss","mixin":["grid-semantics"],"category":"unity/grid/semantics"}}}
