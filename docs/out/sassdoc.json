{"unity/grid/base":{"gutters":{"category":"unity/grid/base","linenum":163,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"","name":"$count"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"The totla number of columns. Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"Number","description":"The width of a single column in the grid. Defaults to global $grid-column-width.","name":"$column-width"},{"type":"Number","description":"The width of a single gutter in the grid. Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"type":"String","description":"The unit to use when calculating static dimensions. [px|em]","name":"$unit"}],"function":["gutters"],"overview":["Get the width of a number of gutters."]},"fluid-columns":{"category":"unity/grid/base","linenum":150,"source":"unity/grid/_base.scss","function":["fluid-columns"],"overview":["Convenience function for calculating fluid columns."]},"gutter-width":{"category":"unity/grid/base","linenum":114,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"Defaults to global $grid-width, if it exists.","name":"$grid-width"},{"type":"String","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"String","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"type":"String","description":"Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"type":"String","description":"Defaults to global $grid-unit.","name":"$unit"}],"function":["gutter-width"],"overview":["Calculate the static width of a single gutter with a given grid-width and column-width."]},"grid-width":{"category":"unity/grid/base","linenum":19,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"$grid-columns Defaults to global $grid-columns."}],"function":["grid-width"],"overview":["Calculate the static grid width for a number of columns.","Unlike column-width() and gutter-width(), the global $grid-width is overridden if we have values for both $column-width and $gutter-width, to ensure a calculated value."]},"span-limit":{"category":"unity/grid/base","include":["span-limit\t(4, 12);","width:100%;","}"],"linenum":375,"source":"unity/grid/_base.scss","param":[{"description":"","name":"$min-columns"},{"description":"","name":"$max-columns"},{"description":"","name":"$column-width"},{"description":"","name":"$gutter-width"},{"type":"Number|List","description":"Offset the left and right dimensions with a list or number, ie. \"1rem 1.5rem\" or \"14px\";","name":"$adjust"},"=#container {"],"mixin":["span-limit"],"overview":["Add min-width and max-width for a column range."]},"fluid-container":{"category":"unity/grid/base","linenum":253,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"Defaults to $grid-columns","name":"$span"},{"type":"Number","description":"Defaults to $column-width","name":"$column-width"},{"type":"Number","description":"Defaults to global $grid-gutter-width","name":"$gutter-width"},{"type":"Number","description":"Defaults to global $grid-padding","name":"$padding"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean|String","description":"","name":"$semantics"}],"mixin":["fluid-container"],"overview":["Convenience method for fluid containers. Fluid containers are often easier with nesting."]},"static-columns":{"category":"unity/grid/base","linenum":156,"source":"unity/grid/_base.scss","function":["static-columns"],"overview":["Convenience function for calculating static column width."]},"column-width":{"category":"unity/grid/base","linenum":98,"source":"unity/grid/_base.scss","param":[{"description":"","name":"$grid-width"},{"description":"","name":"$grid-columns"},{"description":"","name":"$gutter-width"},{"type":"String","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"description":"","name":"$grid-unit"},"=column-width(960px, 16, 10px)"],"function":["column-width"],"overview":["Calculate the static width of a single column with a given grid-width and gutter-width."]},"grid":{"category":"unity/grid/base","linenum":432,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"Defaults to global $grid-columns.","name":"$columns"},{"type":"String","description":"[static|fluid] Defaults to global $grid-style.","name":"$style"},{"type":"Number","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"type":"Number","description":"Defaults to global $grid-padding.","name":"$padding"},{"type":"Number","description":"Defaults to global $grid-width, if column and gutter widths aren't set.","name":"$width"},{"type":"String","description":"Defaults to global $grid-unit.","name":"$unit"},{"type":"Selector","description":"Scope these styles to a class rather than a media query.","name":"$scope"},{"type":"Boolean|String","description":"If true, calls mixin grid-semantics() with the given grid parameters. A string is used as the $prefix parameter for grid-semantics().","name":"$semantics"}],"mixin":["grid"]},"static-column()":{"category":"unity/grid/base","linenum":328,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean","description":"","name":"$semantics"}],"mixin":["static-column()"],"overview":["Creates a static column"]},"fluid-column()":{"category":"unity/grid/base","linenum":316,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean","description":"","name":"$semantics"}],"mixin":["fluid-column()"],"overview":["Creates a fluid column"]},"grid-padding-right":{"category":"unity/grid/base","linenum":59,"source":"unity/grid/_base.scss","param":[{"description":"","name":"$padding"}],"function":["grid-padding-right"]},"flux-container":{"category":"unity/grid/base","linenum":265,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"Defaults to 1.","name":"$min-span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$max-span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"Number","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"type":"String","description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"","name":"$semantics"}],"mixin":["flux-container"],"overview":["Create a container that spans a range of columns."]},"span":{"category":"unity/grid/base","linenum":196,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"","name":"$count"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"String","description":"Defaults to $grid-unit.","name":"$grid-unit"}],"function":["span"]},"grid-unit":{"category":"unity/grid/base","linenum":12,"source":"unity/grid/_base.scss","param":[{"description":"","name":"$dim"}],"function":["grid-unit"],"overview":["Convert any dimension to the unit preferred by the global $grid-unit."]},"row":{"category":"unity/grid/base","linenum":281,"source":"unity/grid/_base.scss","mixin":["row"],"overview":["Basic mixin for a row."]},"grid-padding-width":{"category":"unity/grid/base","linenum":72,"source":"unity/grid/_base.scss","param":[{"description":"","name":"$padding"}],"function":["grid-padding-width"]},"omega":{"category":"unity/grid/base","include":["omega;","}","}"],"linenum":342,"source":"unity/grid/_base.scss","mixin":["omega","=.column {","&:nth-of-type(3n) {"],"overview":["Use for the last element of a row. Basically floats right and removes right margin."]},"columns":{"category":"unity/grid/base","linenum":287,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"description":"[static|fluid] Defaults to global $grid-style.","name":"$style"},{"type":"Number","description":"Defaults to global $grid-column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $grid-gutter-width.","name":"$gutter-width"},{"description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"Adds &.omega, &.fluid, &.static, &.collapse classes for semantic markup. Pass a string to prefix the semantic classes.","name":"$semantics"}],"mixin":["columns"]},"nth-omega":{"category":"unity/grid/base","include":["nth-omega(3n);","}"],"linenum":354,"source":"unity/grid/_base.scss","param":[{"description":"","name":"$nth"},{"type":"Boolean","description":"[true] When false, uses nth-child instead of nth-of-type.","name":"$of-type"},"=.column {"],"mixin":["nth-omega"],"overview":["Convenience function for omegas."]},"static-gutters":{"category":"unity/grid/base","linenum":189,"source":"unity/grid/_base.scss","function":["static-gutters"],"overview":["Convenience function for calculating static gutters."]},"grid-padding-left":{"category":"unity/grid/base","linenum":42,"source":"unity/grid/_base.scss","param":[{"description":"","name":"$padding"}],"function":["grid-padding-left"]},"container":{"category":"unity/grid/base","linenum":213,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"Defaults to global $grid-padding.","name":"$padding"},{"type":"String","description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"Calls grid-semantics(), using parameters as $prefix, if it is a string.","name":"$semantics"}],"mixin":["container"]},"container-width":{"category":"unity/grid/base","linenum":82,"source":"unity/grid/_base.scss","param":[{"type":"Number","description":"","name":"$columns"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number|List","description":"A padding value for the grid matte.","name":"$padding"},{"type":"Number","description":"The total width for the grid, if the column or gutter are null/auto.","name":"$width"},{"type":"String","description":"[rem|px]","name":"$unit"}],"function":["container-width"],"overview":["Get the width of the grid container, which includes the padding (global $grid-padding)."]},"fluid-span":{"category":"unity/grid/base","linenum":207,"source":"unity/grid/_base.scss","function":["fluid-span"],"overview":["Convenience function for fluid span."]},"fluid-gutters":{"category":"unity/grid/base","linenum":183,"source":"unity/grid/_base.scss","function":["fluid-gutters"],"overview":["Convenience function for calculating fluid gutters."]}},"unity/grid/breakpoints":{"grid-breakpoint-columns":{"category":"unity/grid/breakpoints","linenum":44,"source":"unity/grid/_breakpoints.scss","param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"function":["grid-breakpoint-columns"],"overview":["Returns the columns for a breakpoint."]},"grid-breakpoint-handle":{"category":"unity/grid/breakpoints","linenum":33,"source":"unity/grid/_breakpoints.scss","param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"function":["grid-breakpoint-handle"]},"grid-breakpoint-max":{"category":"unity/grid/breakpoints","linenum":82,"source":"unity/grid/_breakpoints.scss","param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"function":["grid-breakpoint-max"],"overview":["Returns the maximum columns that a breakpoint is visible at."]},"grid-breakpoint-min":{"category":"unity/grid/breakpoints","linenum":60,"source":"unity/grid/_breakpoints.scss","param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"function":["grid-breakpoint-min"],"overview":["Returns the minimum columns that a breakpoint is visible at."]},"grid-breakpoint":{"category":"unity/grid/breakpoints","linenum":119,"source":"unity/grid/_breakpoints.scss","param":[{"type":"String|List","description":"If a string, looks for a breakpoint in $grid-breakpoints with the same handle. If a list, it's considered a breakpoint.","name":"$breakpoint"},{"type":"Selector","description":"","name":"$media-query"},{"type":"Boolean","description":"","name":"$semantics"}],"mixin":["grid-breakpoint"],"overview":["Add rules to a breakpoint. Changes to the global grid variables effective only in this context."]},"grid-breakpoints":{"category":"unity/grid/breakpoints","linenum":5,"source":"unity/grid/_breakpoints.scss","function":["grid-breakpoints"]},"grid-breakpoint-scope":{"category":"unity/grid/breakpoints","linenum":105,"source":"unity/grid/_breakpoints.scss","return":[{"type":"Selector","description":"The selector scope for a certain breakpoint."}],"param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"function":["grid-breakpoint-scope"],"overview":["Returns the base selector scope for the breakpoint."]}},"units":{"cast-unit":{"category":"units","linenum":260,"source":"unity/_units.scss","param":[{"type":"String","description":"[em,pt,px,rem]","name":"$unit"},{"description":"","name":"$dims"},"= cast-unit(px, 3em, 4em, (5))"],"function":["cast-unit"]},"pt":{"category":"units","linenum":222,"source":"unity/_units.scss","return":[{"type":"Number","description":"A pt value."},"=pt(16px) = 12pt"],"param":[{"description":"","name":"$dim"},{"description":"Defaults to global $px-per-inch (96).","name":"$px-per-inch"},{"description":"Defaults to global $pt-per-inch (72).","name":"$pt-per-inch"}],"function":["pt"],"overview":["Visually relative to the pixels per inch of a device, but provides a consistent mathmatical formula for converting units to pts for print.","Totally untested with actual print at this point."]},"px":{"category":"units","linenum":63,"source":"unity/_units.scss","return":[{"type":"Number","description":"A px value."},"=px(1rem) = 16px","=px(1 4rem 2em 10%) = 1px 64px 26px 10%"],"param":[{"description":"","name":"$dim"}],"function":["px"],"overview":["Convert any number to a px, or ensure a px value.","Percentages are retained. Use percent() to calculate static values."]},"minus":{"category":"units","linenum":320,"source":"unity/_units.scss","param":[{"description":"...","name":"$dims"},"= minus(20rem, 4px, 7em, 5)"],"mixin":["minus"],"overview":["Subtract numbers, normalizing them first. Percentages are ignored. Convert them first with percent(), if necessary."]},"sub-px":{"category":"units","linenum":13,"source":"unity/_units.scss","param":[{"description":"","name":"$dim"}],"function":["sub-px"],"overview":["If a number has a .00001 decimal, it's probably a rounding issue and needs to be dropped."]},"strip-unit":{"category":"units","linenum":25,"source":"unity/_units.scss","param":[{"type":"Number","description":"","name":"$num"},"=strip-unit(16px) = 16"],"function":["strip-unit"],"overview":["Removes the unit from a number."]},"first-unit":{"category":"units","linenum":34,"source":"unity/_units.scss","param":[{"description":"...","name":"$dims"},"=first-unit(0 12% 10% 1px) = px"],"function":["first-unit"],"overview":["Find the first unit in a list of numbers."]},"unity":{"category":"units","linenum":280,"source":"unity/_units.scss","param":[{"description":"...","name":"$dims"},"= unity(12px, 1em) = #{unity(12px, 1em)}","= unity(1em, 14px, 1.2rem, (16, 8%)) = 1em .25em 1.45em 16em 8%"],"mixin":["unity"],"overview":["Convert all numbers to the same unit type. Percentages are ignored. Convert them first with percent(), if necessary."]},"percent":{"category":"units","linenum":184,"source":"unity/_units.scss","return":[{"type":"Number","description":"If $dim is a % value, returns the percent calculation in the same unit as $context. If $dim is another unit, a % will be returned."},"=percent(24px, 240px) = 10%","=percent(1.5rem, 240px) = 10%","=percent(10%, 240px) = 24px","=percent(10%, rem(240px)) = 1.5rem"],"param":[{"type":"Number","description":"If a %","name":"$dim"},{"type":"Number","description":"The total width for the calculation of the percentages.","name":"$context"}],"function":["percent"],"overview":["Convert arbitrary units to or from percentages. This works a little differently than the other unit functions, because it does not retain units of its own type. In other words, a % value will be converted, rather than returned entact."]},"plus":{"category":"units","linenum":304,"source":"unity/_units.scss","param":[{"description":"...","name":"$dims"},"= plus(1rem, 4px, 7em, 5)"],"mixin":["plus"],"overview":["Add numbers, normalizing them first. Percentages are ignored. Convert them first with percent(), if necessary."]},"em":{"category":"units","linenum":142,"source":"unity/_units.scss","param":[{"type":"Number","description":"","name":"$dim"},{"type":"Number","description":"[global $em-baseline] However many px = 1em, or the relative em of the current context.","name":"$baseline"},{"type":"Boolean","description":"[false] When true, adjusts the global $em-baseline to whatever the result is. this is useful if you want to set things font-size: em(12px)","name":"$adjust"}],"function":["em"],"overview":["Sometimes em values are still viable, obviously, but you have to know the context for calculations. The baseline is stored, so each subsequent call will use the previous $baseline parameter, if none is passed."]},"rem":{"category":"units","linenum":337,"source":"unity/_units.scss","param":[{"description":"...","name":"$properties"},"=rem(font-size 12px, line-height 1.4em)"],"mixin":["rem"],"overview":["Use rem units with px fallback","Specify a px, em, or rem value with each property. Unitless values will be considered an rem."]}},"unity/grid/semantics":{"grid-semantics":{"category":"unity/grid/semantics","linenum":2,"source":"unity/grid/_semantics.scss","param":[{"type":"Number","description":"Defaults to global $grid-unit.","name":"$grid-unit"},{"type":"String","description":"A string to prefix the classes with (ie. \"small\", \"medium\", \"large\")","name":"$prefix"}],"mixin":["grid-semantics"]},"column-semantics":{"category":"unity/grid/semantics","linenum":68,"source":"unity/grid/_semantics.scss","param":[{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[static|fluid]","name":"$style"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"String","description":"","name":"$unit"},{"type":"String","description":"","name":"$prefix"}],"mixin":["column-semantics"],"overview":["Adds .fluid, .static, and .omega classes."]}}}
