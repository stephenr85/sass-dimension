{"grid/base":{"static-column()":{"category":"grid/base","linenum":288,"source":"grid/_base.scss","mixin":["static-column()"],"param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean","description":"","name":"$semantics"}],"overview":["Creates a static column"]},"column-width":{"category":"grid/base","function":["column-width"],"linenum":60,"source":"grid/_base.scss","param":[{"description":"","name":"$grid-width"},{"description":"","name":"$grid-columns"},{"description":"","name":"$gutter-width"},{"type":"String","description":"Defaults to global $column-width.","name":"$column-width"},{"description":"","name":"$grid-unit"},"=column-width(960px, 16, 10px)"],"overview":["Calculate the static width of a single column with a given grid-width and gutter-width."]},"fluid-column()":{"category":"grid/base","linenum":276,"source":"grid/_base.scss","mixin":["fluid-column()"],"param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean","description":"","name":"$semantics"}],"overview":["Creates a fluid column"]},"fluid-container":{"category":"grid/base","linenum":215,"source":"grid/_base.scss","mixin":["fluid-container"],"param":[{"type":"Number","description":"Defaults to $grid-columns","name":"$span"},{"type":"Number","description":"Defaults to $column-width","name":"$column-width"},{"type":"Number","description":"Defaults to global $gutter-width","name":"$gutter-width"},{"type":"String","description":"[rem|px]","name":"$unit"},{"type":"Boolean|String","description":"","name":"$semantics"}],"overview":["Convenience method for fluid containers. Fluid containers are often easier with nesting."]},"container":{"category":"grid/base","linenum":175,"source":"grid/_base.scss","mixin":["container"],"param":[{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"Number","description":"Defaults to global $grid-padding.","name":"$padding"},{"type":"String","description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"Calls grid-semantics(), using parameters as $prefix, if it is a string.","name":"$semantics"}]},"grid-unit":{"category":"grid/base","function":["grid-unit"],"linenum":12,"source":"grid/_base.scss","param":[{"description":"","name":"$dim"}],"overview":["Convert any dimension to the unit preferred by the global $grid-unit."]},"span":{"category":"grid/base","function":["span"],"linenum":158,"source":"grid/_base.scss","param":[{"type":"Number","description":"","name":"$count"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"String","description":"Defaults to $grid-unit.","name":"$grid-unit"}]},"fluid-columns":{"category":"grid/base","function":["fluid-columns"],"linenum":112,"source":"grid/_base.scss","overview":["Convenience function for calculating fluid columns."]},"columns":{"category":"grid/base","linenum":247,"source":"grid/_base.scss","mixin":["columns"],"param":[{"type":"Number","description":"","name":"$span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"description":"[static|fluid] Defaults to global $grid-style.","name":"$style"},{"type":"Number","description":"Defaults to global $column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $gutter-width.","name":"$gutter-width"},{"description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"Adds &.omega, &.fluid, &.static, &.collapse classes for semantic markup. Pass a string to prefix the semantic classes.","name":"$semantics"}]},"nth-omega":{"category":"grid/base","linenum":314,"source":"grid/_base.scss","include":["nth-omega(3n);","}"],"mixin":["nth-omega"],"param":[{"description":"","name":"$nth"},{"type":"Boolean","description":"[true] When false, uses nth-child instead of nth-of-type.","name":"$of-type"},"=.column {"],"overview":["Convenience function for omegas."]},"omega":{"category":"grid/base","linenum":302,"source":"grid/_base.scss","include":["omega;","}","}"],"mixin":["omega","=.column {","&:nth-of-type(3n) {"],"overview":["Use for the last element of a row. Basically floats right and removes right margin."]},"gutters":{"category":"grid/base","function":["gutters"],"linenum":125,"source":"grid/_base.scss","param":[{"type":"Number","description":"","name":"$count"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"The totla number of columns. Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"Number","description":"The width of a single column in the grid. Defaults to global $column-width.","name":"$column-width"},{"type":"Number","description":"The width of a single gutter in the grid. Defaults to global $gutter-width.","name":"$gutter-width"},{"type":"String","description":"The unit to use when calculating static dimensions. [px|em]","name":"$unit"}],"overview":["Get the width of a number of gutters."]},"static-columns":{"category":"grid/base","function":["static-columns"],"linenum":118,"source":"grid/_base.scss","overview":["Convenience function for calculating static column width."]},"span-limit":{"category":"grid/base","linenum":335,"source":"grid/_base.scss","include":["span-limit\t(4, 12);","width:100%;","}"],"mixin":["span-limit"],"param":[{"description":"","name":"$min-columns"},{"description":"","name":"$max-columns"},"=#container {"],"overview":["Add min-width and max-width for a column range."]},"grid-width":{"category":"grid/base","function":["grid-width"],"linenum":19,"source":"grid/_base.scss","param":[{"type":"Number","description":"$grid-columns Defaults to global $grid-columns."}],"overview":["Calculate the static grid width for a number of columns.","Unlike column-width() and gutter-width(), the global $grid-width is overridden if we have values for both $column-width and $gutter-width, to ensure a calculated value."]},"fluid-span":{"category":"grid/base","function":["fluid-span"],"linenum":169,"source":"grid/_base.scss","overview":["Convenience function for fluid span."]},"fluid-gutters":{"category":"grid/base","function":["fluid-gutters"],"linenum":145,"source":"grid/_base.scss","overview":["Convenience function for calculating fluid gutters."]},"container-width":{"category":"grid/base","function":["container-width"],"linenum":41,"source":"grid/_base.scss"},"row":{"category":"grid/base","linenum":241,"source":"grid/_base.scss","mixin":["row"],"overview":["Basic mixin for a row."]},"gutter-width":{"category":"grid/base","function":["gutter-width"],"linenum":76,"source":"grid/_base.scss","param":[{"type":"Number","description":"Defaults to global $grid-width, if it exists.","name":"$grid-width"},{"type":"String","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"String","description":"Defaults to global $column-width.","name":"$column-width"},{"type":"String","description":"Defaults to global $gutter-width.","name":"$gutter-width"},{"type":"String","description":"Defaults to global $grid-unit.","name":"$unit"}],"overview":["Calculate the static width of a single gutter with a given grid-width and column-width."]},"grid":{"category":"grid/base","linenum":374,"source":"grid/_base.scss","mixin":["grid"],"param":[{"type":"Number","description":"Defaults to global $grid-columns.","name":"$columns"},{"type":"String","description":"[static|fluid] Defaults to global $grid-style.","name":"$style"},{"type":"Number","description":"Defaults to global $column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $gutter-width.","name":"$gutter-width"},{"type":"Number","description":"Defaults to global $grid-padding.","name":"$padding"},{"type":"Number","description":"Defaults to global $grid-width, if column and gutter widths aren't set.","name":"$width"},{"type":"String","description":"Defaults to global $grid-unit.","name":"$unit"},{"type":"Selector","description":"Scope these styles to a class rather than a media query.","name":"$scope"},{"type":"Boolean|String","description":"If true, calls mixin grid-semantics() with the given grid parameters. A string is used as the $prefix parameter for grid-semantics().","name":"$semantics"}]},"flux-container":{"category":"grid/base","linenum":226,"source":"grid/_base.scss","mixin":["flux-container"],"param":[{"type":"Number","description":"Defaults to 1.","name":"$min-span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$max-span"},{"type":"Number","description":"Defaults to global $grid-columns.","name":"$grid-columns"},{"type":"Number","description":"Defaults to global $column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to global $gutter-width.","name":"$gutter-width"},{"type":"String","description":"[rem|px] Defaults to global $grid-unit.","name":"$unit"},{"type":"Boolean|String","description":"","name":"$semantics"}],"overview":["Create a container that spans a range of columns."]},"static-gutters":{"category":"grid/base","function":["static-gutters"],"linenum":151,"source":"grid/_base.scss","overview":["Convenience function for calculating static gutters."]}},"dimension":{"cast-unit":{"category":"dimension","function":["cast-unit"],"linenum":228,"source":"_dimension.scss","param":[{"type":"String","description":"[em,pt,px,rem]","name":"$unit"},{"description":"","name":"$dims"},"= cast-unit(px, 3em, 4em, (5))"]},"plus":{"category":"dimension","linenum":272,"source":"_dimension.scss","mixin":["plus"],"param":[{"description":"...","name":"$dims"},"= plus(1rem, 4px, 7em, 5)"],"overview":["Add dimensions together, normalizing them first. Percentages are ignored. Convert them first with percent(), if necessary."]},"minus":{"category":"dimension","linenum":288,"source":"_dimension.scss","mixin":["minus"],"param":[{"description":"...","name":"$dims"},"= minus(20rem, 4px, 7em, 5)"],"overview":["Subtract dimensions, normalizing them first. Percentages are ignored. Convert them first with percent(), if necessary."]},"unity":{"category":"dimension","linenum":248,"source":"_dimension.scss","mixin":["unity"],"param":[{"description":"...","name":"$dims"},"= unity(12px, 1em) = #{unity(12px, 1em)}","= unity(1em, 14px, 1.2rem, (16, 8%)) = 1em .25em 1.45em 16em 8%"],"overview":["Convert all dimensions to the same unit type. Percentages are ignored. Convert them first with percent(), if necessary."]},"strip-unit":{"category":"dimension","function":["strip-unit"],"linenum":10,"source":"_dimension.scss","param":[{"type":"Number","description":"","name":"$num"},"=strip-unit(16px) = 16"],"overview":["Removes the unit from a number."]},"percent":{"category":"dimension","function":["percent"],"linenum":158,"source":"_dimension.scss","return":[{"type":"Number","description":"If $dim is a % value, returns the percent calculation in the same unit as $context. If $dim is another unit, a % will be returned."},"=percent(24px, 240px) = 10%","=percent(1.5rem, 240px) = 10%","=percent(10%, 240px) = 24px","=percent(10%, rem(240px)) = 1.5rem"],"param":[{"type":"Number","description":"If a %","name":"$dim"},{"type":"Number","description":"The total width for the calculation of the percentages.","name":"$context"}],"overview":["Convert arbitrary units to or from percentages. This works a little differently than the other unit functions, because it does not retain units of its own type. In other words, a % value will be converted, rather than returned entact."]},"rem":{"category":"dimension","linenum":305,"source":"_dimension.scss","mixin":["rem"],"param":[{"description":"...","name":"$properties"},"=rem(font-size 12px, line-height 1.4em)"],"overview":["Use rem units with px fallback","Specify a px, em, or rem value with each property. Unitless values will be considered an rem."]},"first-unit":{"category":"dimension","function":["first-unit"],"linenum":19,"source":"_dimension.scss","param":[{"description":"...","name":"$dims"},"=first-unit(0 12% 10% 1px) = px"],"overview":["Find the first unit in a list of dimensions."]},"pt":{"category":"dimension","function":["pt"],"linenum":193,"source":"_dimension.scss","return":[{"type":"Number","description":"A pt value."},"=pt(20px)"],"param":[{"description":"","name":"$dim"},{"description":"Defaults to global $px-per-inch.","name":"$px-per-inch"}],"overview":["Visually relative to the pixels per inch of a device, but provides a consistent mathmatical formula for converting units to pts for print.","Totally untested with actual print at this point."]},"em":{"category":"dimension","function":["em"],"linenum":123,"source":"_dimension.scss","param":[{"type":"Number","description":"","name":"$dim"},{"type":"Number","description":"However many px = 1em, or the relative em of the current context. Defaults to global $em-baseline.","name":"$baseline"}],"overview":["Sometimes em values are still viable, obviously, but you have to know the context for calculations. The baseline is stored, so each subsequent call will use the previous $baseline parameter, if none is passed."]},"px":{"category":"dimension","function":["px"],"linenum":48,"source":"_dimension.scss","return":[{"type":"Number","description":"A px value."},"=px(1rem) = 16px","=px(1 4rem 2em 10%) = 1px 64px 26px 10%"],"param":[{"description":"","name":"$dim"}],"overview":["Convert any number to a px, or ensure a px value.","Percentages are retained. Use percent() to calculate static values."]}},"grid/semantics":{"column-semantics":{"category":"grid/semantics","linenum":68,"source":"grid/_semantics.scss","mixin":["column-semantics"],"param":[{"type":"Number","description":"","name":"$grid-columns"},{"type":"String","description":"[static|fluid]","name":"$style"},{"type":"Number","description":"","name":"$column-width"},{"type":"Number","description":"","name":"$gutter-width"},{"type":"String","description":"","name":"$unit"},{"type":"String","description":"","name":"$prefix"}],"overview":["Adds .fluid, .static, and .omega classes."]},"grid-semantics":{"category":"grid/semantics","linenum":2,"source":"grid/_semantics.scss","mixin":["grid-semantics"],"param":[{"type":"Number","description":"Defaults to global $grid-unit.","name":"$grid-unit"},{"type":"String","description":"A string to prefix the classes with (ie. \"small\", \"medium\", \"large\")","name":"$prefix"}]}},"grid/breakpoints":{"grid-breakpoint-scope":{"category":"grid/breakpoints","function":["grid-breakpoint-scope"],"linenum":78,"source":"grid/_breakpoints.scss","param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"overview":["Returns the base selector scope for the breakpoint."]},"grid-breakpoint":{"category":"grid/breakpoints","linenum":92,"source":"grid/_breakpoints.scss","mixin":["grid-breakpoint"],"param":[{"type":"List","description":"","name":"$breakpoint"},{"type":"Selector","description":"","name":"$media-query"},{"type":"Boolean","description":"","name":"$semantics"}]},"grid-breakpoint-limit":{"category":"grid/breakpoints","function":["grid-breakpoint-limit"],"linenum":59,"source":"grid/_breakpoints.scss","param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"overview":["Returns the columns that a breakpoint is limited to."]},"grid-breakpoint-columns":{"category":"grid/breakpoints","function":["grid-breakpoint-columns"],"linenum":43,"source":"grid/_breakpoints.scss","param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}],"overview":["Returns the columns for a breakpoint."]},"grid-breakpoint-handle":{"category":"grid/breakpoints","function":["grid-breakpoint-handle"],"linenum":32,"source":"grid/_breakpoints.scss","param":[{"type":"List|String","description":"The breakpoint or breakpoint handle."}]},"grid-breakpoints":{"category":"grid/breakpoints","function":["grid-breakpoints"],"linenum":5,"source":"grid/_breakpoints.scss"}}}
