{"grid":{"omega":{"overview":["Use for the last element of a row."],"linenum":133,"source":"_grid.scss","category":"grid","mixin":["omega"]},"fluid-space":{"overview":["Convenience function for fluid space."],"linenum":93,"source":"_grid.scss","category":"grid","function":["fluid-space"]},"fluid-columns":{"overview":["Convenience function for fluid columns."],"linenum":51,"source":"_grid.scss","category":"grid","function":["fluid-columns"]},"with-grid":{"linenum":277,"source":"_grid.scss","param":[{"type":"Number","description":"","name":"$min-columns"},{"type":"Number","description":"Defaults to $total-columns.","name":"$max-columns"},{"type":"Number","description":"Defaults to $column-width.","name":"$column-width"},{"type":"Number","description":"Defaults to $gutter-width.","name":"$gutter-width"},{"type":"String","description":"Defaults to $grid-unit.","name":"$grid-unit"},{"type":"Selector","description":"Scope these styles to a class rather than a media query.","name":"$scope"},{"type":"Boolean|String","description":"If boolean, calls mixin grid-semantics() with the given grid parameters. A string it used as the $prefix parameter for grid-semantics().","name":"$semantics"}],"category":"grid","mixin":["with-grid"]},"grid-semantics":{"linenum":215,"source":"_grid.scss","param":[{"type":"Number","description":"Defaults to global $grid-unit.","name":"$grid-unit"},{"type":"String","description":"A string to prefix the classes with (ie. \"small\", \"medium\", \"large\")","name":"$prefix"}],"category":"grid","mixin":["grid-semantics"]},"gutters":{"overview":["Get the width of a number of gutters."],"linenum":57,"source":"_grid.scss","param":[{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"The totla number of columns. Defaults to global $total-columns.","name":"$total-columns"},{"type":"String","description":"The unit to use when calculating static dimensions. [px|em]","name":"$grid-unit"}],"category":"grid","function":["gutters"]},"columns":{"linenum":146,"source":"_grid.scss","param":[{"type":"Number","description":"","name":"$span"},{"description":"[static|fluid]","name":"$style"},{"type":"Number","description":"","name":"$total-columns"},{"description":"[rem|px]","name":"$grid-unit"},{"type":"Boolean|String","description":"Adds &.omega, &.fluid, &.static, &.collapse classes for semantic markup. Pass a string to prefix the semantic classes.","name":"$semantics"}],"category":"grid","mixin":["columns"]},"row":{"linenum":141,"source":"_grid.scss","category":"grid","mixin":["row"]},"container":{"linenum":99,"source":"_grid.scss","param":[{"type":"Number","description":"","name":"$total-columns"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"String","description":"[rem|px] Defaults to global $grid-unit.","name":"$grid-unit"},{"type":"Boolean|String","description":"Calls grid-semantics(), using parameters as $prefix, if it is a string.","name":"$semantics"}],"category":"grid","mixin":["container"]},"fluid-column()":{"linenum":209,"source":"_grid.scss","category":"grid","mixin":["fluid-column()"]},"fluid-container":{"overview":["Convenience method for fluid containers. Fluid containers are often easier with nesting."],"linenum":126,"source":"_grid.scss","category":"grid","mixin":["fluid-container"]},"space":{"linenum":82,"source":"_grid.scss","param":[{"type":"Number","description":"","name":"$count"},{"type":"String","description":"[fluid|static]","name":"$style"},{"type":"Number","description":"Defaults to global $total-columns.","name":"$total-columns"},{"type":"String","description":"Defaults to $grid-unit.","name":"$grid-unit"}],"category":"grid","function":["space"]},"fluid-gutters":{"overview":["Convenience function for fluid columns."],"linenum":75,"source":"_grid.scss","category":"grid","function":["fluid-gutters"]},"grid-width":{"overview":["Get the static grid width for a number of columns."],"linenum":16,"source":"_grid.scss","param":[{"type":"Number","description":"$total-columns Defaults to global $total-columns."}],"category":"grid","function":["grid-width"]}},"dimension":{"percent":{"return":[{"type":"Number","description":"A % value."},"=percent(1.5em, 240px)"],"overview":["Convert arbitrary units to percentages. $dim and $context can be em, rem, or px values."],"linenum":97,"source":"_dimension.scss","param":[{"description":"","name":"$dim"},{"type":"Number","description":"The total width for the calculation of the percentages.","name":"$context"}],"category":"dimension","function":["percent"]},"unity":{"overview":["Convert all dimensions to the same unit type. Percentages are ignored. Convert them first with percent(), if necessary."],"linenum":176,"source":"_dimension.scss","param":[{"description":"...","name":"$dims"}],"category":"dimension","mixin":["unity"]},"minus":{"overview":["Subtract dimensions, normalizing them first. Percentages are ignored. Convert them first with percent(), if necessary."],"linenum":222,"source":"_dimension.scss","param":[{"description":"...","name":"$dims"}],"category":"dimension","mixin":["minus"]},"strip-unit":{"overview":["Removes the unit from a number."],"linenum":10,"source":"_dimension.scss","param":[{"type":"Number","description":"","name":"$num"}],"category":"dimension","function":["strip-unit"]},"pt":{"return":[{"type":"Number","description":"A pt value."},"=pt(20px)"],"overview":["Relative to the pixels per inch, but provides a consistent mathmatical formula for converting other units to pts for print.","Totally untested with actual print at this point."],"linenum":122,"source":"_dimension.scss","param":[{"description":"","name":"$dim"},{"description":"Defaults to global $px-per-inch.","name":"$px-per-inch"}],"category":"dimension","function":["pt"]},"px":{"return":[{"type":"Number","description":"A px value."}],"overview":["Convert rem/em to px, or ensure a px value."],"linenum":67,"source":"_dimension.scss","param":[{"description":"","name":"$dim"}],"category":"dimension","function":["px"]},"em":{"overview":["Prefer rem units, or use percentages for relative values. Sometimes em values are still viable, obviously, but you have to know the context."],"linenum":45,"source":"_dimension.scss","param":[{"type":"Number","description":"","name":"$dim"},{"type":"Number","description":"However many px = 1em, or the relative em of the current context. Defaults to global $baseline.","name":"$baseline"}],"category":"dimension","function":["em"]},"plus":{"overview":["Add dimensions together, normalizing them first. Percentages are ignored. Convert them first with percent(), if necessary."],"linenum":207,"source":"_dimension.scss","param":[{"description":"...","name":"$dims"}],"category":"dimension","mixin":["plus"]},"rem":{"overview":["Use rem units with px fallback","Specify a px, em, or rem value with each property. Unitless values will be considered an rem."],"linenum":149,"source":"_dimension.scss","param":[{"description":"...","name":"$properties"},"=rem(font-size 12px, line-height 1.4em)"],"category":"dimension","mixin":["rem"]}}}
